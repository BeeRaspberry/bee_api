"""empty message

Revision ID: 334d80612025
Revises: 
Create Date: 2018-01-03 20:47:35.299840

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '334d80612025'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('owner')
    op.add_column('hive', sa.Column('hiveId', sa.Integer(), nullable=True))
    op.drop_constraint(None, 'hive', type_='foreignkey')
    op.create_foreign_key(None, 'hive', 'user', ['ownerId'], ['id'])
    op.add_column('user', sa.Column('api', sa.String(length=255), nullable=True))
    op.add_column('user', sa.Column('roleId', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'user', 'location', ['locationId'], ['id'])
    op.create_foreign_key(None, 'user', 'role', ['roleId'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_column('user', 'roleId')
    op.drop_column('user', 'api')
    op.drop_constraint(None, 'hive', type_='foreignkey')
    op.create_foreign_key(None, 'hive', 'owner', ['ownerId'], ['id'])
    op.drop_column('hive', 'hiveId')
    op.create_table('owner',
    sa.Column('id', sa.NUMERIC(), nullable=False),
    sa.Column('firstName', sa.TEXT(length=50), nullable=True),
    sa.Column('lastName', sa.TEXT(length=50), nullable=True),
    sa.Column('passwd', sa.TEXT(length=200), nullable=True),
    sa.Column('email', sa.TEXT(length=400), nullable=True),
    sa.Column('phoneNumber', sa.TEXT(length=20), nullable=True),
    sa.Column('locationId', sa.INTEGER(), nullable=True),
    sa.Column('registeredOn', sa.DATETIME(), nullable=True),
    sa.Column('admin', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['locationId'], ['location.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
